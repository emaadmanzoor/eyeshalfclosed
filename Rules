#!/usr/bin/env ruby

preprocess do
  # authors may unpublish items by setting meta attribute publish: false
  items.delete_if { |item| item[:publish] == false }
  copy_static
  add_update_item_attributes
end

compile '/assets/css/*/' do
  filter :sass
  filter :rainpress
end

compile '/assets/js/*' do
end

compile '*' do
  # item[:extension] returns 'html.erb' for multi-dotted filename
  ext = item[:extension].nil? ? nil : item[:extension].split('.').last
  
  if !item.binary?
    if ext == 'erb'
      filter :erb
    elsif ext == 'haml' || ext.nil?
      filter :haml
    elsif ext == 'md' || ext == 'markdown'
      filter :erb
      filter :ultraviolet
      filter :rdiscount
      filter :typogruby
    else
      raise "Filter is not configured for #{item.identifier} in Rules file."
    end

    # use layouts with .html extension or layout specified in meta
    item[:layout] = "none" unless item[:layout] || File.extname(route_path(item)) == '.html' 

    layout 'default' unless item[:layout] == "none"
    filter :relativize_paths, :type => :html
  end
end

route '/assets/css/*/' do
  item.identifier.chop + '.css'
end

route '/assets/js/*/' do
  item.identifier.chop + '.js'
end

route '/articles/*/*' do
  if !item.binary?
    date = Time.parse(item[:created_at])
    slug = item.identifier.split(/\/|_/).last
    '/' + date.strftime('%Y/%m/%d') + '/' + slug + '/' + 'index.html'
  else
    asset_name = item.raw_filename.split('/').last
    directory = item.raw_filename.split('/')[-2].split('_').join('/')
    '/' + directory + '/' + asset_name
  end
end

route '*' do
  route_path(item)
end

layout '*', :haml, :format => :html5
